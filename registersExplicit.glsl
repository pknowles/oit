

//declare variables we assume will be placed in registers
#if MAX_FRAGS > 0
LFB_FRAG_TYPE  frag0,frag1,frag2,frag3,frag4,frag5,frag6,frag7;
#endif
#if MAX_FRAGS > 8
LFB_FRAG_TYPE  frag8,frag9,frag10,frag11,frag12,frag13,frag14,frag15;
#endif
#if MAX_FRAGS > 16
LFB_FRAG_TYPE  frag16,frag17,frag18,frag19,frag20,frag21,frag22,frag23,frag24,frag25,frag26,frag27,frag28,frag29,frag30,frag31;
#endif
#if MAX_FRAGS > 32
LFB_FRAG_TYPE  frag32,frag33,frag34,frag35,frag36,frag37,frag38,frag39,frag40,frag41,frag42,frag43,frag44,frag45,frag46,frag47,frag48,frag49,frag50,frag51,frag52,frag53,frag54,frag55,frag56,frag57,frag58,frag59,frag60,frag61,frag62,frag63;
#endif

//initialize LFB fragment iteration
LFB_INIT(lfb, fragIndex);
LFB_ITER_BEGIN(lfb);

//load fragments into registers
#if MAX_FRAGS > 0
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 1; frag0 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 2; frag1 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 3; frag2 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 4; frag3 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 5; frag4 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 6; frag5 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 7; frag6 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_8(LFB_ITER_CONDITION(lfb)) {fragCount = 8; frag7 = LFB_GET(lfb); LFB_ITER_INC(lfb);
#endif
#if MAX_FRAGS > 8
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 9; frag8 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 10; frag9 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 11; frag10 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 12; frag11 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 13; frag12 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 14; frag13 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 15; frag14 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_16(LFB_ITER_CONDITION(lfb)) {fragCount = 16; frag15 = LFB_GET(lfb); LFB_ITER_INC(lfb);
#endif
#if MAX_FRAGS > 16
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 17; frag16 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 18; frag17 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 19; frag18 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 20; frag19 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 21; frag20 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 22; frag21 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 23; frag22 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 24; frag23 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 25; frag24 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 26; frag25 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 27; frag26 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 28; frag27 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 29; frag28 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 30; frag29 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 31; frag30 = LFB_GET(lfb); LFB_ITER_INC(lfb);
IF_FRAGS_32(LFB_ITER_CONDITION(lfb)) {fragCount = 32; frag31 = LFB_GET(lfb); LFB_ITER_INC(lfb);
#endif
#if MAX_FRAGS > 32
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 33; frag32 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 34; frag33 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 35; frag34 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 36; frag35 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 37; frag36 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 38; frag37 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 39; frag38 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 40; frag39 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 41; frag40 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 42; frag41 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 43; frag42 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 44; frag43 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 45; frag44 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 46; frag45 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 47; frag46 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 48; frag47 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 49; frag48 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 50; frag49 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 51; frag50 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 52; frag51 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 53; frag52 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 54; frag53 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 55; frag54 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 56; frag55 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 57; frag56 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 58; frag57 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 59; frag58 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 60; frag59 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 61; frag60 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 62; frag61 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 63; frag62 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
IF_FRAGS_64(LFB_ITER_CONDITION(lfb)) {fragCount = 64; frag63 = LFB_GET(lfb); LFB_ITER_INC(lfb);}
#endif

//end early-out fragment loading
#if MAX_FRAGS > 0
}}}}}}}}
#endif
#if MAX_FRAGS > 8
}}}}}}}}
#endif
#if MAX_FRAGS > 16
}}}}}}}}}}}}}}}}
#endif

#if !REGISTERS_DISABLE_SORTING

#if !REGISTERS_SORT_BITONIC

/*
  _                  _   _          
 (_)_ _  ___ ___ _ _| |_(_)___ _ _  
 | | ' \(_-</ -_) '_|  _| / _ \ ' \ 
 |_|_||_/__/\___|_|  \__|_\___/_||_|
 sort fragments using an insertion sort network

*/

#if MAX_FRAGS > 0
IF_FRAGS_8(fragCount > 1) {SWAP_INS(0,1)}
IF_FRAGS_8(fragCount > 2) {SWAP_INS(1,2)SWAP_INS(0,1)}}
IF_FRAGS_8(fragCount > 3) {SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}
IF_FRAGS_8(fragCount > 4) {SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}
IF_FRAGS_8(fragCount > 5) {SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}
IF_FRAGS_8(fragCount > 6) {SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}
IF_FRAGS_8(fragCount > 7) {SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}
#endif
#if MAX_FRAGS > 8
IF_FRAGS_16(fragCount > 8) {SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}
IF_FRAGS_16(fragCount > 9) {SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}
IF_FRAGS_16(fragCount > 10) {SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}
IF_FRAGS_16(fragCount > 11) {SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}
IF_FRAGS_16(fragCount > 12) {SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}
IF_FRAGS_16(fragCount > 13) {SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}
IF_FRAGS_16(fragCount > 14) {SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}
IF_FRAGS_16(fragCount > 15) {SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}
#endif
#if MAX_FRAGS > 16
IF_FRAGS_32(fragCount > 16) {SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 17) {SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 18) {SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 19) {SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 20) {SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 21) {SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 22) {SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 23) {SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 24) {SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 25) {SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 26) {SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 27) {SWAP_INS(26,27)SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 28) {SWAP_INS(27,28)SWAP_INS(26,27)SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 29) {SWAP_INS(28,29)SWAP_INS(27,28)SWAP_INS(26,27)SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 30) {SWAP_INS(29,30)SWAP_INS(28,29)SWAP_INS(27,28)SWAP_INS(26,27)SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_32(fragCount > 31) {SWAP_INS(30,31)SWAP_INS(29,30)SWAP_INS(28,29)SWAP_INS(27,28)SWAP_INS(26,27)SWAP_INS(25,26)SWAP_INS(24,25)SWAP_INS(23,24)SWAP_INS(22,23)SWAP_INS(21,22)SWAP_INS(20,21)SWAP_INS(19,20)SWAP_INS(18,19)SWAP_INS(17,18)SWAP_INS(16,17)SWAP_INS(15,16)SWAP_INS(14,15)SWAP_INS(13,14)SWAP_INS(12,13)SWAP_INS(11,12)SWAP_INS(10,11)SWAP_INS(9,10)SWAP_INS(8,9)SWAP_INS(7,8)SWAP_INS(6,7)SWAP_INS(5,6)SWAP_INS(4,5)SWAP_INS(3,4)SWAP_INS(2,3)SWAP_INS(1,2)SWAP_INS(0,1)}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
#endif
#if MAX_FRAGS > 32
IF_FRAGS_64(fragCount > 32) {SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 33) {SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 34) {SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 35) {SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 36) {SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 37) {SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 38) {SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 39) {SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 40) {SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 41) {SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 42) {SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 43) {SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 44) {SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 45) {SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 46) {SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 47) {SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 48) {SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 49) {SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 50) {SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 51) {SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 52) {SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 53) {SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 54) {SWAP_INS(53,54);SWAP(52,53);SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 55) {SWAP_INS(54,55);SWAP(53,54);SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 56) {SWAP_INS(55,56);SWAP(54,55);SWAP_INS(53,54);SWAP(52,53);SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 57) {SWAP_INS(56,57);SWAP(55,56);SWAP_INS(54,55);SWAP(53,54);SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 58) {SWAP_INS(57,58);SWAP(56,57);SWAP_INS(55,56);SWAP(54,55);SWAP_INS(53,54);SWAP(52,53);SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 59) {SWAP_INS(58,59);SWAP(57,58);SWAP_INS(56,57);SWAP(55,56);SWAP_INS(54,55);SWAP(53,54);SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 60) {SWAP_INS(59,60);SWAP(58,59);SWAP_INS(57,58);SWAP(56,57);SWAP_INS(55,56);SWAP(54,55);SWAP_INS(53,54);SWAP(52,53);SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 61) {SWAP_INS(60,61);SWAP(59,60);SWAP_INS(58,59);SWAP(57,58);SWAP_INS(56,57);SWAP(55,56);SWAP_INS(54,55);SWAP(53,54);SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 62) {SWAP_INS(61,62);SWAP(60,61);SWAP_INS(59,60);SWAP(58,59);SWAP_INS(57,58);SWAP(56,57);SWAP_INS(55,56);SWAP(54,55);SWAP_INS(53,54);SWAP(52,53);SWAP_INS(51,52);SWAP(50,51);SWAP_INS(49,50);SWAP(48,49);SWAP_INS(47,48);SWAP(46,47);SWAP_INS(45,46);SWAP(44,45);SWAP_INS(43,44);SWAP(42,43);SWAP_INS(41,42);SWAP(40,41);SWAP_INS(39,40);SWAP(38,39);SWAP_INS(37,38);SWAP(36,37);SWAP_INS(35,36);SWAP(34,35);SWAP_INS(33,34);SWAP(32,33);SWAP_INS(31,32);SWAP(30,31);SWAP_INS(29,30);SWAP(28,29);SWAP_INS(27,28);SWAP(26,27);SWAP_INS(25,26);SWAP(24,25);SWAP_INS(23,24);SWAP(22,23);SWAP_INS(21,22);SWAP(20,21);SWAP_INS(19,20);SWAP(18,19);SWAP_INS(17,18);SWAP(16,17);SWAP_INS(15,16);SWAP(14,15);SWAP_INS(13,14);SWAP(12,13);SWAP_INS(11,12);SWAP(10,11);SWAP_INS(9,10);SWAP(8,9);SWAP_INS(7,8);SWAP(6,7);SWAP_INS(5,6);SWAP(4,5);SWAP_INS(3,4);SWAP(2,3);SWAP_INS(1,2);SWAP(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
IF_FRAGS_64(fragCount > 63) {SWAP_INS(62,63);SWAP(61,62);SWAP_INS(60,61);SWAP(59,60);SWAP_INS(58,59);SWAP(57,58);SWAP_INS(56,57);SWAP(55,56);SWAP_INS(54,55);SWAP(53,54);SWAP_INS(52,53);SWAP(51,52);SWAP_INS(50,51);SWAP(49,50);SWAP_INS(48,49);SWAP(47,48);SWAP_INS(46,47);SWAP(45,46);SWAP_INS(44,45);SWAP(43,44);SWAP_INS(42,43);SWAP(41,42);SWAP_INS(40,41);SWAP(39,40);SWAP_INS(38,39);SWAP(37,38);SWAP_INS(36,37);SWAP(35,36);SWAP_INS(34,35);SWAP(33,34);SWAP_INS(32,33);SWAP(31,32);SWAP_INS(30,31);SWAP(29,30);SWAP_INS(28,29);SWAP(27,28);SWAP_INS(26,27);SWAP(25,26);SWAP_INS(24,25);SWAP(23,24);SWAP_INS(22,23);SWAP(21,22);SWAP_INS(20,21);SWAP(19,20);SWAP_INS(18,19);SWAP(17,18);SWAP_INS(16,17);SWAP(15,16);SWAP_INS(14,15);SWAP(13,14);SWAP_INS(12,13);SWAP(11,12);SWAP_INS(10,11);SWAP(9,10);SWAP_INS(8,9);SWAP(7,8);SWAP_INS(6,7);SWAP(5,6);SWAP_INS(4,5);SWAP(3,4);SWAP_INS(2,3);SWAP(1,2);SWAP_INS(0,1);}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
#endif

//end early-out insertion sort
#if MAX_FRAGS > 0
}}}}}}}
#endif
#if MAX_FRAGS > 8
}}}}}}}}
#endif
#if MAX_FRAGS > 16
}}}}}}}}}}}}}}}}
#endif

#else // (!REGISTERS_SORT_BITONIC)

/*
  _    _ _            _    
 | |__(_) |_ ___ _ _ (_)__ 
 | '_ \ |  _/ _ \ ' \| / _|
 |_.__/_|\__\___/_||_|_\__|
 sort fragments using a bitonic sort network

*/

//fill empty depths with inf
const float inf_depth = 9999.0;
#if MAX_FRAGS > 0
if (fragCount < 1) LFB_FRAG_DEPTH(frag0) = inf_depth;
if (fragCount < 2) LFB_FRAG_DEPTH(frag1) = inf_depth;
if (fragCount < 3) LFB_FRAG_DEPTH(frag2) = inf_depth;
if (fragCount < 4) LFB_FRAG_DEPTH(frag3) = inf_depth;
if (fragCount < 5) LFB_FRAG_DEPTH(frag4) = inf_depth;
if (fragCount < 6) LFB_FRAG_DEPTH(frag5) = inf_depth;
if (fragCount < 7) LFB_FRAG_DEPTH(frag6) = inf_depth;
if (fragCount < 8) LFB_FRAG_DEPTH(frag7) = inf_depth;
#endif
#if MAX_FRAGS > 8
if (fragCount < 9) LFB_FRAG_DEPTH(frag8) = inf_depth;
if (fragCount < 10) LFB_FRAG_DEPTH(frag9) = inf_depth;
if (fragCount < 11) LFB_FRAG_DEPTH(frag10) = inf_depth;
if (fragCount < 12) LFB_FRAG_DEPTH(frag11) = inf_depth;
if (fragCount < 13) LFB_FRAG_DEPTH(frag12) = inf_depth;
if (fragCount < 14) LFB_FRAG_DEPTH(frag13) = inf_depth;
if (fragCount < 15) LFB_FRAG_DEPTH(frag14) = inf_depth;
if (fragCount < 16) LFB_FRAG_DEPTH(frag15) = inf_depth;
#endif
#if MAX_FRAGS > 16
if (fragCount < 17) LFB_FRAG_DEPTH(frag16) = inf_depth;
if (fragCount < 18) LFB_FRAG_DEPTH(frag17) = inf_depth;
if (fragCount < 19) LFB_FRAG_DEPTH(frag18) = inf_depth;
if (fragCount < 20) LFB_FRAG_DEPTH(frag19) = inf_depth;
if (fragCount < 21) LFB_FRAG_DEPTH(frag20) = inf_depth;
if (fragCount < 22) LFB_FRAG_DEPTH(frag21) = inf_depth;
if (fragCount < 23) LFB_FRAG_DEPTH(frag22) = inf_depth;
if (fragCount < 24) LFB_FRAG_DEPTH(frag23) = inf_depth;
if (fragCount < 25) LFB_FRAG_DEPTH(frag24) = inf_depth;
if (fragCount < 26) LFB_FRAG_DEPTH(frag25) = inf_depth;
if (fragCount < 27) LFB_FRAG_DEPTH(frag26) = inf_depth;
if (fragCount < 28) LFB_FRAG_DEPTH(frag27) = inf_depth;
if (fragCount < 29) LFB_FRAG_DEPTH(frag28) = inf_depth;
if (fragCount < 30) LFB_FRAG_DEPTH(frag29) = inf_depth;
if (fragCount < 31) LFB_FRAG_DEPTH(frag30) = inf_depth;
if (fragCount < 32) LFB_FRAG_DEPTH(frag31) = inf_depth;
#endif
#if MAX_FRAGS > 32
if (fragCount < 33) LFB_FRAG_DEPTH(frag32) = inf_depth;
if (fragCount < 34) LFB_FRAG_DEPTH(frag33) = inf_depth;
if (fragCount < 35) LFB_FRAG_DEPTH(frag34) = inf_depth;
if (fragCount < 36) LFB_FRAG_DEPTH(frag35) = inf_depth;
if (fragCount < 37) LFB_FRAG_DEPTH(frag36) = inf_depth;
if (fragCount < 38) LFB_FRAG_DEPTH(frag37) = inf_depth;
if (fragCount < 39) LFB_FRAG_DEPTH(frag38) = inf_depth;
if (fragCount < 40) LFB_FRAG_DEPTH(frag39) = inf_depth;
if (fragCount < 41) LFB_FRAG_DEPTH(frag40) = inf_depth;
if (fragCount < 42) LFB_FRAG_DEPTH(frag41) = inf_depth;
if (fragCount < 43) LFB_FRAG_DEPTH(frag42) = inf_depth;
if (fragCount < 44) LFB_FRAG_DEPTH(frag43) = inf_depth;
if (fragCount < 45) LFB_FRAG_DEPTH(frag44) = inf_depth;
if (fragCount < 46) LFB_FRAG_DEPTH(frag45) = inf_depth;
if (fragCount < 47) LFB_FRAG_DEPTH(frag46) = inf_depth;
if (fragCount < 48) LFB_FRAG_DEPTH(frag47) = inf_depth;
if (fragCount < 49) LFB_FRAG_DEPTH(frag48) = inf_depth;
if (fragCount < 50) LFB_FRAG_DEPTH(frag49) = inf_depth;
if (fragCount < 51) LFB_FRAG_DEPTH(frag50) = inf_depth;
if (fragCount < 52) LFB_FRAG_DEPTH(frag51) = inf_depth;
if (fragCount < 53) LFB_FRAG_DEPTH(frag52) = inf_depth;
if (fragCount < 54) LFB_FRAG_DEPTH(frag53) = inf_depth;
if (fragCount < 55) LFB_FRAG_DEPTH(frag54) = inf_depth;
if (fragCount < 56) LFB_FRAG_DEPTH(frag55) = inf_depth;
if (fragCount < 57) LFB_FRAG_DEPTH(frag56) = inf_depth;
if (fragCount < 58) LFB_FRAG_DEPTH(frag57) = inf_depth;
if (fragCount < 59) LFB_FRAG_DEPTH(frag58) = inf_depth;
if (fragCount < 60) LFB_FRAG_DEPTH(frag59) = inf_depth;
if (fragCount < 61) LFB_FRAG_DEPTH(frag60) = inf_depth;
if (fragCount < 62) LFB_FRAG_DEPTH(frag61) = inf_depth;
if (fragCount < 63) LFB_FRAG_DEPTH(frag62) = inf_depth;
if (fragCount < 64) LFB_FRAG_DEPTH(frag63) = inf_depth;
#endif

//bitonic sort network

SWAP(0,1);SWAP(3,2);SWAP(4,5);SWAP(7,6);			
#if MAX_FRAGS > 8
SWAP(8,9);SWAP(11,10);SWAP(12,13);SWAP(15,14);			
#if MAX_FRAGS > 16
SWAP(16,17);SWAP(19,18);SWAP(20,21);SWAP(23,22);SWAP(24,25);SWAP(27,26);SWAP(28,29);SWAP(31,30);			
#if MAX_FRAGS > 32
SWAP(32,33);SWAP(35,34);SWAP(36,37);SWAP(39,38);SWAP(40,41);SWAP(43,42);SWAP(44,45);SWAP(47,46);SWAP(48,49);SWAP(51,50);SWAP(52,53);SWAP(55,54);SWAP(56,57);SWAP(59,58);SWAP(60,61);SWAP(63,62);
#endif
#endif
#endif
SWAP(0,2);SWAP(1,3);SWAP(6,4);SWAP(7,5);			
#if MAX_FRAGS > 8
SWAP(8,10);SWAP(9,11);SWAP(14,12);SWAP(15,13);			
#if MAX_FRAGS > 16
SWAP(16,18);SWAP(17,19);SWAP(22,20);SWAP(23,21);SWAP(24,26);SWAP(25,27);SWAP(30,28);SWAP(31,29);			
#if MAX_FRAGS > 32
SWAP(32,34);SWAP(33,35);SWAP(38,36);SWAP(39,37);SWAP(40,42);SWAP(41,43);SWAP(46,44);SWAP(47,45);SWAP(48,50);SWAP(49,51);SWAP(54,52);SWAP(55,53);SWAP(56,58);SWAP(57,59);SWAP(62,60);SWAP(63,61);
#endif
#endif
#endif
SWAP(0,1);SWAP(2,3);SWAP(5,4);SWAP(7,6);			
#if MAX_FRAGS > 8
SWAP(8,9);SWAP(10,11);SWAP(13,12);SWAP(15,14);			
#if MAX_FRAGS > 16
SWAP(16,17);SWAP(18,19);SWAP(21,20);SWAP(23,22);SWAP(24,25);SWAP(26,27);SWAP(29,28);SWAP(31,30);			
#if MAX_FRAGS > 32
SWAP(32,33);SWAP(34,35);SWAP(37,36);SWAP(39,38);SWAP(40,41);SWAP(42,43);SWAP(45,44);SWAP(47,46);SWAP(48,49);SWAP(50,51);SWAP(53,52);SWAP(55,54);SWAP(56,57);SWAP(58,59);SWAP(61,60);SWAP(63,62);
#endif
#endif
#endif
SWAP(0,4);SWAP(1,5);SWAP(2,6);SWAP(3,7);			
#if MAX_FRAGS > 8
SWAP(12,8);SWAP(13,9);SWAP(14,10);SWAP(15,11);			
#if MAX_FRAGS > 16
SWAP(16,20);SWAP(17,21);SWAP(18,22);SWAP(19,23);SWAP(28,24);SWAP(29,25);SWAP(30,26);SWAP(31,27);			
#if MAX_FRAGS > 32
SWAP(32,36);SWAP(33,37);SWAP(34,38);SWAP(35,39);SWAP(44,40);SWAP(45,41);SWAP(46,42);SWAP(47,43);SWAP(48,52);SWAP(49,53);SWAP(50,54);SWAP(51,55);SWAP(60,56);SWAP(61,57);SWAP(62,58);SWAP(63,59);
#endif
#endif
#endif
SWAP(0,2);SWAP(1,3);SWAP(4,6);SWAP(5,7);			
#if MAX_FRAGS > 8
SWAP(10,8);SWAP(11,9);SWAP(14,12);SWAP(15,13);			
#if MAX_FRAGS > 16
SWAP(16,18);SWAP(17,19);SWAP(20,22);SWAP(21,23);SWAP(26,24);SWAP(27,25);SWAP(30,28);SWAP(31,29);			
#if MAX_FRAGS > 32
SWAP(32,34);SWAP(33,35);SWAP(36,38);SWAP(37,39);SWAP(42,40);SWAP(43,41);SWAP(46,44);SWAP(47,45);SWAP(48,50);SWAP(49,51);SWAP(52,54);SWAP(53,55);SWAP(58,56);SWAP(59,57);SWAP(62,60);SWAP(63,61);
#endif
#endif
#endif
SWAP(0,1);SWAP(2,3);SWAP(4,5);SWAP(6,7);			
#if MAX_FRAGS > 8
SWAP(9,8);SWAP(11,10);SWAP(13,12);SWAP(15,14);			
#if MAX_FRAGS > 16
SWAP(16,17);SWAP(18,19);SWAP(20,21);SWAP(22,23);SWAP(25,24);SWAP(27,26);SWAP(29,28);SWAP(31,30);			
#if MAX_FRAGS > 32
SWAP(32,33);SWAP(34,35);SWAP(36,37);SWAP(38,39);SWAP(41,40);SWAP(43,42);SWAP(45,44);SWAP(47,46);SWAP(48,49);SWAP(50,51);SWAP(52,53);SWAP(54,55);SWAP(57,56);SWAP(59,58);SWAP(61,60);SWAP(63,62);
#endif
#endif
#endif

#if MAX_FRAGS > 8
SWAP(0,8);SWAP(1,9);SWAP(2,10);SWAP(3,11);SWAP(4,12);SWAP(5,13);SWAP(6,14);SWAP(7,15);			
#if MAX_FRAGS > 16
SWAP(24,16);SWAP(25,17);SWAP(26,18);SWAP(27,19);SWAP(28,20);SWAP(29,21);SWAP(30,22);SWAP(31,23);			
#if MAX_FRAGS > 32
SWAP(32,40);SWAP(33,41);SWAP(34,42);SWAP(35,43);SWAP(36,44);SWAP(37,45);SWAP(38,46);SWAP(39,47);SWAP(56,48);SWAP(57,49);SWAP(58,50);SWAP(59,51);SWAP(60,52);SWAP(61,53);SWAP(62,54);SWAP(63,55);
#endif
#endif
SWAP(0,4);SWAP(1,5);SWAP(2,6);SWAP(3,7);SWAP(8,12);SWAP(9,13);SWAP(10,14);SWAP(11,15);			
#if MAX_FRAGS > 16
SWAP(20,16);SWAP(21,17);SWAP(22,18);SWAP(23,19);SWAP(28,24);SWAP(29,25);SWAP(30,26);SWAP(31,27);			
#if MAX_FRAGS > 32
SWAP(32,36);SWAP(33,37);SWAP(34,38);SWAP(35,39);SWAP(40,44);SWAP(41,45);SWAP(42,46);SWAP(43,47);SWAP(52,48);SWAP(53,49);SWAP(54,50);SWAP(55,51);SWAP(60,56);SWAP(61,57);SWAP(62,58);SWAP(63,59);
#endif
#endif
SWAP(0,2);SWAP(1,3);SWAP(4,6);SWAP(5,7);SWAP(8,10);SWAP(9,11);SWAP(12,14);SWAP(13,15);			
#if MAX_FRAGS > 16
SWAP(18,16);SWAP(19,17);SWAP(22,20);SWAP(23,21);SWAP(26,24);SWAP(27,25);SWAP(30,28);SWAP(31,29);			
#if MAX_FRAGS > 32
SWAP(32,34);SWAP(33,35);SWAP(36,38);SWAP(37,39);SWAP(40,42);SWAP(41,43);SWAP(44,46);SWAP(45,47);SWAP(50,48);SWAP(51,49);SWAP(54,52);SWAP(55,53);SWAP(58,56);SWAP(59,57);SWAP(62,60);SWAP(63,61);
#endif
#endif
SWAP(0,1);SWAP(2,3);SWAP(4,5);SWAP(6,7);SWAP(8,9);SWAP(10,11);SWAP(12,13);SWAP(14,15);			
#if MAX_FRAGS > 16
SWAP(17,16);SWAP(19,18);SWAP(21,20);SWAP(23,22);SWAP(25,24);SWAP(27,26);SWAP(29,28);SWAP(31,30);			
#if MAX_FRAGS > 32
SWAP(32,33);SWAP(34,35);SWAP(36,37);SWAP(38,39);SWAP(40,41);SWAP(42,43);SWAP(44,45);SWAP(46,47);SWAP(49,48);SWAP(51,50);SWAP(53,52);SWAP(55,54);SWAP(57,56);SWAP(59,58);SWAP(61,60);SWAP(63,62);
#endif
#endif

#if MAX_FRAGS > 16
SWAP(0,16);SWAP(1,17);SWAP(2,18);SWAP(3,19);SWAP(4,20);SWAP(5,21);SWAP(6,22);SWAP(7,23);SWAP(8,24);SWAP(9,25);SWAP(10,26);SWAP(11,27);SWAP(12,28);SWAP(13,29);SWAP(14,30);SWAP(15,31);			
#if MAX_FRAGS > 32
SWAP(48,32);SWAP(49,33);SWAP(50,34);SWAP(51,35);SWAP(52,36);SWAP(53,37);SWAP(54,38);SWAP(55,39);SWAP(56,40);SWAP(57,41);SWAP(58,42);SWAP(59,43);SWAP(60,44);SWAP(61,45);SWAP(62,46);SWAP(63,47);
#endif
SWAP(0,8);SWAP(1,9);SWAP(2,10);SWAP(3,11);SWAP(4,12);SWAP(5,13);SWAP(6,14);SWAP(7,15);SWAP(16,24);SWAP(17,25);SWAP(18,26);SWAP(19,27);SWAP(20,28);SWAP(21,29);SWAP(22,30);SWAP(23,31);			
#if MAX_FRAGS > 32
SWAP(40,32);SWAP(41,33);SWAP(42,34);SWAP(43,35);SWAP(44,36);SWAP(45,37);SWAP(46,38);SWAP(47,39);SWAP(56,48);SWAP(57,49);SWAP(58,50);SWAP(59,51);SWAP(60,52);SWAP(61,53);SWAP(62,54);SWAP(63,55);
#endif
SWAP(0,4);SWAP(1,5);SWAP(2,6);SWAP(3,7);SWAP(8,12);SWAP(9,13);SWAP(10,14);SWAP(11,15);SWAP(16,20);SWAP(17,21);SWAP(18,22);SWAP(19,23);SWAP(24,28);SWAP(25,29);SWAP(26,30);SWAP(27,31);			
#if MAX_FRAGS > 32
SWAP(36,32);SWAP(37,33);SWAP(38,34);SWAP(39,35);SWAP(44,40);SWAP(45,41);SWAP(46,42);SWAP(47,43);SWAP(52,48);SWAP(53,49);SWAP(54,50);SWAP(55,51);SWAP(60,56);SWAP(61,57);SWAP(62,58);SWAP(63,59);
#endif
SWAP(0,2);SWAP(1,3);SWAP(4,6);SWAP(5,7);SWAP(8,10);SWAP(9,11);SWAP(12,14);SWAP(13,15);SWAP(16,18);SWAP(17,19);SWAP(20,22);SWAP(21,23);SWAP(24,26);SWAP(25,27);SWAP(28,30);SWAP(29,31);			
#if MAX_FRAGS > 32
SWAP(34,32);SWAP(35,33);SWAP(38,36);SWAP(39,37);SWAP(42,40);SWAP(43,41);SWAP(46,44);SWAP(47,45);SWAP(50,48);SWAP(51,49);SWAP(54,52);SWAP(55,53);SWAP(58,56);SWAP(59,57);SWAP(62,60);SWAP(63,61);
#endif
SWAP(0,1);SWAP(2,3);SWAP(4,5);SWAP(6,7);SWAP(8,9);SWAP(10,11);SWAP(12,13);SWAP(14,15);SWAP(16,17);SWAP(18,19);SWAP(20,21);SWAP(22,23);SWAP(24,25);SWAP(26,27);SWAP(28,29);SWAP(30,31);			
#if MAX_FRAGS > 32
SWAP(33,32);SWAP(35,34);SWAP(37,36);SWAP(39,38);SWAP(41,40);SWAP(43,42);SWAP(45,44);SWAP(47,46);SWAP(49,48);SWAP(51,50);SWAP(53,52);SWAP(55,54);SWAP(57,56);SWAP(59,58);SWAP(61,60);SWAP(63,62);
#endif

#if MAX_FRAGS > 32
SWAP(0,32);SWAP(1,33);SWAP(2,34);SWAP(3,35);SWAP(4,36);SWAP(5,37);SWAP(6,38);SWAP(7,39);SWAP(8,40);SWAP(9,41);SWAP(10,42);SWAP(11,43);SWAP(12,44);SWAP(13,45);SWAP(14,46);SWAP(15,47);SWAP(16,48);SWAP(17,49);SWAP(18,50);SWAP(19,51);SWAP(20,52);SWAP(21,53);SWAP(22,54);SWAP(23,55);SWAP(24,56);SWAP(25,57);SWAP(26,58);SWAP(27,59);SWAP(28,60);SWAP(29,61);SWAP(30,62);SWAP(31,63);
SWAP(0,16);SWAP(1,17);SWAP(2,18);SWAP(3,19);SWAP(4,20);SWAP(5,21);SWAP(6,22);SWAP(7,23);SWAP(8,24);SWAP(9,25);SWAP(10,26);SWAP(11,27);SWAP(12,28);SWAP(13,29);SWAP(14,30);SWAP(15,31);SWAP(32,48);SWAP(33,49);SWAP(34,50);SWAP(35,51);SWAP(36,52);SWAP(37,53);SWAP(38,54);SWAP(39,55);SWAP(40,56);SWAP(41,57);SWAP(42,58);SWAP(43,59);SWAP(44,60);SWAP(45,61);SWAP(46,62);SWAP(47,63);
SWAP(0,8);SWAP(1,9);SWAP(2,10);SWAP(3,11);SWAP(4,12);SWAP(5,13);SWAP(6,14);SWAP(7,15);SWAP(16,24);SWAP(17,25);SWAP(18,26);SWAP(19,27);SWAP(20,28);SWAP(21,29);SWAP(22,30);SWAP(23,31);SWAP(32,40);SWAP(33,41);SWAP(34,42);SWAP(35,43);SWAP(36,44);SWAP(37,45);SWAP(38,46);SWAP(39,47);SWAP(48,56);SWAP(49,57);SWAP(50,58);SWAP(51,59);SWAP(52,60);SWAP(53,61);SWAP(54,62);SWAP(55,63);
SWAP(0,4);SWAP(1,5);SWAP(2,6);SWAP(3,7);SWAP(8,12);SWAP(9,13);SWAP(10,14);SWAP(11,15);SWAP(16,20);SWAP(17,21);SWAP(18,22);SWAP(19,23);SWAP(24,28);SWAP(25,29);SWAP(26,30);SWAP(27,31);SWAP(32,36);SWAP(33,37);SWAP(34,38);SWAP(35,39);SWAP(40,44);SWAP(41,45);SWAP(42,46);SWAP(43,47);SWAP(48,52);SWAP(49,53);SWAP(50,54);SWAP(51,55);SWAP(56,60);SWAP(57,61);SWAP(58,62);SWAP(59,63);
SWAP(0,2);SWAP(1,3);SWAP(4,6);SWAP(5,7);SWAP(8,10);SWAP(9,11);SWAP(12,14);SWAP(13,15);SWAP(16,18);SWAP(17,19);SWAP(20,22);SWAP(21,23);SWAP(24,26);SWAP(25,27);SWAP(28,30);SWAP(29,31);SWAP(32,34);SWAP(33,35);SWAP(36,38);SWAP(37,39);SWAP(40,42);SWAP(41,43);SWAP(44,46);SWAP(45,47);SWAP(48,50);SWAP(49,51);SWAP(52,54);SWAP(53,55);SWAP(56,58);SWAP(57,59);SWAP(60,62);SWAP(61,63);
SWAP(0,1);SWAP(2,3);SWAP(4,5);SWAP(6,7);SWAP(8,9);SWAP(10,11);SWAP(12,13);SWAP(14,15);SWAP(16,17);SWAP(18,19);SWAP(20,21);SWAP(22,23);SWAP(24,25);SWAP(26,27);SWAP(28,29);SWAP(30,31);SWAP(32,33);SWAP(34,35);SWAP(36,37);SWAP(38,39);SWAP(40,41);SWAP(42,43);SWAP(44,45);SWAP(46,47);SWAP(48,49);SWAP(50,51);SWAP(52,53);SWAP(54,55);SWAP(56,57);SWAP(58,59);SWAP(60,61);SWAP(62,63);

#endif // MAX_FRAGS > 8
#endif // MAX_FRAGS > 16
#endif // MAX_FRAGS > 32


#endif // !REGISTERS_SORT_BITONIC

#endif // !REGISTERS_DISABLE_SORTING

//blend fragments
#if MAX_FRAGS > 32
BLEND(63);BLEND(62);BLEND(61);BLEND(60);BLEND(59);BLEND(58);BLEND(57);BLEND(56);BLEND(55);BLEND(54);BLEND(53);BLEND(52);BLEND(51);BLEND(50);BLEND(49);BLEND(48);BLEND(47);BLEND(46);BLEND(45);BLEND(44);BLEND(43);BLEND(42);BLEND(41);BLEND(40);BLEND(39);BLEND(38);BLEND(37);BLEND(36);BLEND(35);BLEND(34);BLEND(33);BLEND(32);
#endif
#if MAX_FRAGS > 16
BLEND(31);BLEND(30);BLEND(29);BLEND(28);BLEND(27);BLEND(26);BLEND(25);BLEND(24);BLEND(23);BLEND(22);BLEND(21);BLEND(20);BLEND(19);BLEND(18);BLEND(17);BLEND(16);
#endif
#if MAX_FRAGS > 8
BLEND(15);BLEND(14);BLEND(13);BLEND(12);BLEND(11);BLEND(10);BLEND(9);BLEND(8);
#endif
#if MAX_FRAGS > 0
BLEND(7);BLEND(6);BLEND(5);BLEND(4);BLEND(3);BLEND(2);BLEND(1);BLEND(0);
#endif



