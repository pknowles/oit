
#Makefile generated by genmake.py (http://goanna.cs.rmit.edu.au/~pknowles/scripts.php)
#Known Bugs: Not all source files/headers of sublibs (projects with their own
#makefile in subdirectories) are searched. Hence, the external library prediction
#does not always get all results

#check x64
ASFX=
LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
ASFX=64
endif

NOOP = @$(SHELL) -c true


.PHONY=all,debug,prof,opt,clean,cleaner
TARGET=liboitcuda.so
CC=g++
NVCC=nvcc
PTXAS=ptxas
LD=g++
CUDA_ARCH= -arch=sm_30
GCC_FLAGS= -Wno-unused-parameter -Wno-unused-but-set-variable -std=c++0x -Wall -Wextra -D_GNU_SOURCE -Wfatal-errors -shared -fPIC
CFLAGS_R?=
CFLAGS= -I../../pyarlib/../ $(CFLAGS_R)  `pkg-config freetype2 --cflags`
LFLAGS= -shared -fvisibility=hidden -fPIC
LFLAGS+= -lopenal -lrt -lGLU -lGLEW `pkg-config freetype2 --libs` -lm -lpthread -lpng -lz -lGL `sdl2-config --libs` -lopenctm
#LFLAGS+= -Wl,--whole-archive ../../pyarlib/pyarlib$(ASFX).a -Wl,--no-whole-archive
PTX_CFLAGS= $(CUDA_ARCH)
NV_CFLAGS= $(ALL_CFLAGS) -I$(CUDA_HOME)/samples/common/inc -I/home/pknowles/NVIDIA_GPU_Computing_SDK/samples-5.0/common/inc -rdc=true $(CUDA_ARCH)
# -shared -Xcompiler -fPIC
# -arch sm_20
# -arch=sm_35
NV_LFLAGS= -lcuda -lcudpp -shared
# -lcudadevrt
SUBLIBS= ../../pyarlib/pyarlib$(ASFX).a ../../lfb/liblfb$(ASFX).a
OBJECTS= ./interface.o ./oit.o

all: pyarlibpyarliba $(TARGET)

debug: CFLAGS+= -g
debug: export CFLAGS_R+= -g
debug: all

prof: CFLAGS+= -pg
prof: export CFLAGS_R+= -pg
prof: all

opt: CFLAGS+= -03
opt: export CFLAGS_R+= -03
opt: all

ALL_SUBLIBS= $(SUBLIBS)
SUBSUBLIBS_PYARLIBPYARLIBA= $(shell make echodeps --no-print-directory -C ../../pyarlib/ 2>/dev/null)
ALL_SUBLIBS+= $(SUBSUBLIBS_PYARLIBPYARLIBA:%.a=../../pyarlib/%.a)


#prints a list of library dependencies recursively
echodeps:
	@echo $(ALL_SUBLIBS)


#linking/archiving the target
$(TARGET): $(SUBLIBS) $(OBJECTS) dlink.o
	@echo linking $(TARGET)
	#LD_LIBRARY_PATH="$(CUDA_HOME)/lib$(ASFX)/:${LD_LIBRARY_PATH}" && $(LD) -o $(TARGET) $(OBJECTS) $(LFLAGS) $(NV_LFLAGS) $(ALL_SUBLIBS) 
	touch $(TARGET)
	
dlink.o: $(OBJECTS)
	PATH="$(CUDA_HOME)/bin/:${PATH}" && $(NVCC) $(NV_CFLAGS) $(NV_LFLAGS) -dlink $(OBJECTS) -o dlink.o

#target dependent libraries
../../pyarlib/pyarlib$(ASFX).a:
	$(NOOP) #just so $(ASFX) doesnt cause makefile complaints
pyarlibpyarliba:
	@$(MAKE) --no-print-directory -C ../../pyarlib -q || ( echo +../../pyarlib && $(MAKE) --no-print-directory -C ../../pyarlib && echo -../../pyarlib )

#compile object files
%.o : %.cpp
	@echo compiling $@ $(CFLAGS_R)
	@$(CC) $(GCC_FLAGS) $(CFLAGS) -c $< -o $@

#cuda files
#%.o : %.ptx
#	@echo compiling cuda obj \(CUDA\) $@ $(CFLAGS_R)
#	PATH="$(CUDA_HOME)/bin/:${PATH}" && $(PTXAS) $(PTX_CFLAGS) -v -c $< -o $@
	#PATH="$(CUDA_HOME)/bin/:${PATH}" && $(NVCC) $(CFLAGS) $(NV_CFLAGS) -dc -Xptxas="-v" $< -o $@
#%.ptx : %.cu
#	@echo compiling ptx \(CUDA\) $@ $(CFLAGS_R)
#	PATH="$(CUDA_HOME)/bin/:${PATH}" && $(NVCC) $(CFLAGS) $(NV_CFLAGS) -dc -src-in-ptx -ptx $<
	#PATH="$(CUDA_HOME)/bin/:${PATH}" && $(NVCC) $(CFLAGS) $(NV_CFLAGS) -dc -Xptxas="-v" $< -o $(patsubst %.ptx,%.o,$@)
	
%.o : %.cu
	@echo compiling \(CUDA\) $@ $(CFLAGS_R)
	PATH="$(CUDA_HOME)/bin/:${PATH}" && $(NVCC) $(CFLAGS) $(NV_CFLAGS) --keep -dc -Xptxas="-v" -c $< -o $@

#precompiled header

#object dependencies
./oit.cuo: oit.cu oit.cuh
./interface.o: interface.cpp interface.h

#clean and cleaner
clean:
	@echo cleaning $(TARGET)
	@rm -f $(OBJECTS)
	@rm -f $(TARGET)
	@rm -f dlink.o
cleaner: clean
	@echo +../../pyarlib
	@$(MAKE) cleaner --no-print-directory -C ../../pyarlib
	@echo -../../pyarlib










